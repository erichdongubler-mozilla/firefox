[cts.https.html?q=webgpu:api,validation,createBindGroup:bind_group_layout,device_mismatch:*]
  [:]


[cts.https.html?q=webgpu:api,validation,createBindGroup:binding_count_mismatch:*]
  [:]


[cts.https.html?q=webgpu:api,validation,createBindGroup:binding_must_be_present_in_layout:*]
  [:]


[cts.https.html?q=webgpu:api,validation,createBindGroup:binding_must_contain_resource_defined_in_layout:*]
  [:resourceType="compareSamp";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="compareSamp";entry={"buffer":{"type":"storage"}}]

  [:resourceType="compareSamp";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="compareSamp";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="compareSamp";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="compareSamp";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="compareSamp";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="compareSamp";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="compareSamp";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="compareSamp";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="compareSamp";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="errorBuf";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="errorBuf";entry={"buffer":{"type":"storage"}}]

  [:resourceType="errorBuf";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="errorBuf";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="errorBuf";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="errorBuf";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="errorBuf";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="errorBuf";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="errorBuf";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="errorBuf";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="errorBuf";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="errorSamp";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="errorSamp";entry={"buffer":{"type":"storage"}}]

  [:resourceType="errorSamp";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="errorSamp";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="errorSamp";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="errorSamp";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="errorSamp";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="errorSamp";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="errorSamp";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="errorSamp";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="errorSamp";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="errorTex";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="errorTex";entry={"buffer":{"type":"storage"}}]

  [:resourceType="errorTex";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="errorTex";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="errorTex";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="errorTex";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="errorTex";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="errorTex";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="errorTex";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="errorTex";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="errorTex";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="filtSamp";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="filtSamp";entry={"buffer":{"type":"storage"}}]

  [:resourceType="filtSamp";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="filtSamp";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="filtSamp";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="filtSamp";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="filtSamp";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="filtSamp";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="filtSamp";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="filtSamp";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="filtSamp";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="nonFiltSamp";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="nonFiltSamp";entry={"buffer":{"type":"storage"}}]

  [:resourceType="nonFiltSamp";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="nonFiltSamp";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="nonFiltSamp";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="nonFiltSamp";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="nonFiltSamp";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="nonFiltSamp";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="nonFiltSamp";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="nonFiltSamp";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="nonFiltSamp";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="readonlyStorageTex";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="readonlyStorageTex";entry={"buffer":{"type":"storage"}}]

  [:resourceType="readonlyStorageTex";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="readonlyStorageTex";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="readonlyStorageTex";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="readonlyStorageTex";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="readonlyStorageTex";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="readonlyStorageTex";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="readonlyStorageTex";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="readonlyStorageTex";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="readonlyStorageTex";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="readwriteStorageTex";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="readwriteStorageTex";entry={"buffer":{"type":"storage"}}]

  [:resourceType="readwriteStorageTex";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="readwriteStorageTex";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="readwriteStorageTex";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="readwriteStorageTex";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="readwriteStorageTex";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="readwriteStorageTex";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="readwriteStorageTex";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="readwriteStorageTex";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="readwriteStorageTex";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="sampledTex";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="sampledTex";entry={"buffer":{"type":"storage"}}]

  [:resourceType="sampledTex";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="sampledTex";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="sampledTex";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="sampledTex";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="sampledTex";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="sampledTex";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="sampledTex";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="sampledTex";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="sampledTex";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="sampledTexMS";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="sampledTexMS";entry={"buffer":{"type":"storage"}}]

  [:resourceType="sampledTexMS";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="sampledTexMS";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="sampledTexMS";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="sampledTexMS";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="sampledTexMS";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="sampledTexMS";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="sampledTexMS";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="sampledTexMS";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="sampledTexMS";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="storageBuf";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="storageBuf";entry={"buffer":{"type":"storage"}}]

  [:resourceType="storageBuf";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="storageBuf";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="storageBuf";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="storageBuf";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="storageBuf";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="storageBuf";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="storageBuf";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="storageBuf";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="storageBuf";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="uniformBuf";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="uniformBuf";entry={"buffer":{"type":"storage"}}]

  [:resourceType="uniformBuf";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="uniformBuf";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="uniformBuf";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="uniformBuf";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="uniformBuf";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="uniformBuf";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="uniformBuf";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="uniformBuf";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="uniformBuf";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]

  [:resourceType="writeonlyStorageTex";entry={"buffer":{"type":"read-only-storage"}}]

  [:resourceType="writeonlyStorageTex";entry={"buffer":{"type":"storage"}}]

  [:resourceType="writeonlyStorageTex";entry={"buffer":{"type":"uniform"}}]

  [:resourceType="writeonlyStorageTex";entry={"sampler":{"type":"comparison"}}]

  [:resourceType="writeonlyStorageTex";entry={"sampler":{"type":"filtering"}}]

  [:resourceType="writeonlyStorageTex";entry={"sampler":{"type":"non-filtering"}}]

  [:resourceType="writeonlyStorageTex";entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:resourceType="writeonlyStorageTex";entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:resourceType="writeonlyStorageTex";entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:resourceType="writeonlyStorageTex";entry={"texture":{"multisampled":false,"sampleType":"unfilterable-float"}}]

  [:resourceType="writeonlyStorageTex";entry={"texture":{"multisampled":true,"sampleType":"unfilterable-float"}}]


[cts.https.html?q=webgpu:api,validation,createBindGroup:binding_resources,device_mismatch:*]
  [:entry={"buffer":{"type":"storage"}}]

  [:entry={"sampler":{"type":"filtering"}}]

  [:entry={"storageTexture":{"access":"read-only","format":"r32float"}}]

  [:entry={"storageTexture":{"access":"read-write","format":"r32float"}}]

  [:entry={"storageTexture":{"access":"write-only","format":"r32float"}}]

  [:entry={"texture":{"multisampled":false}}]


[cts.https.html?q=webgpu:api,validation,createBindGroup:buffer,effective_buffer_binding_size:*]
  [:type="read-only-storage"]

  [:type="storage"]

  [:type="uniform"]


[cts.https.html?q=webgpu:api,validation,createBindGroup:buffer,resource_binding_size:*]
  [:type="read-only-storage"]

  [:type="storage"]

  [:type="uniform"]


[cts.https.html?q=webgpu:api,validation,createBindGroup:buffer,resource_offset:*]
  [:type="read-only-storage"]

  [:type="storage"]

  [:type="uniform"]


[cts.https.html?q=webgpu:api,validation,createBindGroup:buffer,resource_state:*]
  implementation-status: backlog
  [:]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:buffer,usage:*]
  [:type="read-only-storage"]

  [:type="storage"]

  [:type="uniform"]


[cts.https.html?q=webgpu:api,validation,createBindGroup:buffer_offset_and_size_for_bind_groups_match:*]
  implementation-status: backlog
  [:]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:external_texture,texture_view,dimension:*]
  implementation-status:
    if os == "linux": backlog
  [:dimension="1d"]
    expected:
      if os == "linux": FAIL

  [:dimension="2d"]
    expected:
      if os == "linux": FAIL

  [:dimension="2d-array"]
    expected:
      if os == "linux": FAIL

  [:dimension="3d"]
    expected:
      if os == "linux": FAIL

  [:dimension="cube"]
    expected:
      if os == "linux": FAIL

  [:dimension="cube-array"]
    expected:
      if os == "linux": FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:external_texture,texture_view,format:*]
  implementation-status:
    if os == "linux": backlog
  [:format="bgra8unorm"]
    expected:
      if os == "linux": FAIL

  [:format="bgra8unorm-srgb"]
    expected:
      if os == "linux": FAIL

  [:format="r16float"]
    expected:
      if os == "linux": FAIL

  [:format="r16sint"]
    expected:
      if os == "linux": FAIL

  [:format="r16snorm"]

  [:format="r16uint"]
    expected:
      if os == "linux": FAIL

  [:format="r16unorm"]

  [:format="r32float"]
    expected:
      if os == "linux": FAIL

  [:format="r32sint"]
    expected:
      if os == "linux": FAIL

  [:format="r32uint"]
    expected:
      if os == "linux": FAIL

  [:format="r8sint"]
    expected:
      if os == "linux": FAIL

  [:format="r8snorm"]
    expected:
      if os == "linux": FAIL

  [:format="r8uint"]
    expected:
      if os == "linux": FAIL

  [:format="r8unorm"]
    expected:
      if os == "linux": FAIL

  [:format="rg11b10ufloat"]
    expected:
      if os == "linux": FAIL

  [:format="rg16float"]
    expected:
      if os == "linux": FAIL

  [:format="rg16sint"]
    expected:
      if os == "linux": FAIL

  [:format="rg16snorm"]

  [:format="rg16uint"]
    expected:
      if os == "linux": FAIL

  [:format="rg16unorm"]

  [:format="rg32float"]
    expected:
      if os == "linux": FAIL

  [:format="rg32sint"]
    expected:
      if os == "linux": FAIL

  [:format="rg32uint"]
    expected:
      if os == "linux": FAIL

  [:format="rg8sint"]
    expected:
      if os == "linux": FAIL

  [:format="rg8snorm"]
    expected:
      if os == "linux": FAIL

  [:format="rg8uint"]
    expected:
      if os == "linux": FAIL

  [:format="rg8unorm"]
    expected:
      if os == "linux": FAIL

  [:format="rgb10a2uint"]
    expected:
      if os == "linux": FAIL

  [:format="rgb10a2unorm"]
    expected:
      if os == "linux": FAIL

  [:format="rgb9e5ufloat"]
    expected:
      if os == "linux": FAIL

  [:format="rgba16float"]
    expected:
      if os == "linux": FAIL

  [:format="rgba16sint"]
    expected:
      if os == "linux": FAIL

  [:format="rgba16snorm"]

  [:format="rgba16uint"]
    expected:
      if os == "linux": FAIL

  [:format="rgba16unorm"]

  [:format="rgba32float"]
    expected:
      if os == "linux": FAIL

  [:format="rgba32sint"]
    expected:
      if os == "linux": FAIL

  [:format="rgba32uint"]
    expected:
      if os == "linux": FAIL

  [:format="rgba8sint"]
    expected:
      if os == "linux": FAIL

  [:format="rgba8snorm"]
    expected:
      if os == "linux": FAIL

  [:format="rgba8uint"]
    expected:
      if os == "linux": FAIL

  [:format="rgba8unorm"]
    expected:
      if os == "linux": FAIL

  [:format="rgba8unorm-srgb"]
    expected:
      if os == "linux": FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:external_texture,texture_view,mip_level_count:*]
  implementation-status:
    if os == "linux": backlog
  [:baseMipLevel=1;mipLevelCount=1]
    expected:
      if os == "linux": FAIL

  [:baseMipLevel=1;mipLevelCount=2]
    expected:
      if os == "linux": FAIL

  [:baseMipLevel=2;mipLevelCount=1]
    expected:
      if os == "linux": FAIL

  [:baseMipLevel=2;mipLevelCount=2]
    expected:
      if os == "linux": FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:external_texture,texture_view,sample_count:*]
  implementation-status:
    if os == "linux": backlog
  [:sampleCount=1]
    expected:
      if os == "linux": FAIL

  [:sampleCount=4]
    expected:
      if os == "linux": FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:external_texture,texture_view,usage:*]
  implementation-status:
    if os == "linux": backlog
  [:usage0=16;usage1=1]
    expected:
      if os == "linux": FAIL

  [:usage0=16;usage1=16]
    expected:
      if os == "linux": FAIL

  [:usage0=16;usage1=2]
    expected:
      if os == "linux": FAIL

  [:usage0=16;usage1=4]
    expected:
      if os == "linux": FAIL

  [:usage0=16;usage1=8]
    expected:
      if os == "linux": FAIL

  [:usage0=1;usage1=1]
    expected:
      if os == "linux": FAIL

  [:usage0=1;usage1=16]
    expected:
      if os == "linux": FAIL

  [:usage0=1;usage1=2]
    expected:
      if os == "linux": FAIL

  [:usage0=1;usage1=4]
    expected:
      if os == "linux": FAIL

  [:usage0=1;usage1=8]
    expected:
      if os == "linux": FAIL

  [:usage0=2;usage1=1]
    expected:
      if os == "linux": FAIL

  [:usage0=2;usage1=16]
    expected:
      if os == "linux": FAIL

  [:usage0=2;usage1=2]
    expected:
      if os == "linux": FAIL

  [:usage0=2;usage1=4]
    expected:
      if os == "linux": FAIL

  [:usage0=2;usage1=8]
    expected:
      if os == "linux": FAIL

  [:usage0=4;usage1=1]
    expected:
      if os == "linux": FAIL

  [:usage0=4;usage1=16]
    expected:
      if os == "linux": FAIL

  [:usage0=4;usage1=2]
    expected:
      if os == "linux": FAIL

  [:usage0=4;usage1=4]
    expected:
      if os == "linux": FAIL

  [:usage0=4;usage1=8]
    expected:
      if os == "linux": FAIL

  [:usage0=8;usage1=1]
    expected:
      if os == "linux": FAIL

  [:usage0=8;usage1=16]
    expected:
      if os == "linux": FAIL

  [:usage0=8;usage1=2]
    expected:
      if os == "linux": FAIL

  [:usage0=8;usage1=4]
    expected:
      if os == "linux": FAIL

  [:usage0=8;usage1=8]
    expected:
      if os == "linux": FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:minBindingSize:*]
  [:]


[cts.https.html?q=webgpu:api,validation,createBindGroup:multisampled_validation:*]
  [:multisampled=false]

  [:multisampled=true]


[cts.https.html?q=webgpu:api,validation,createBindGroup:sampler,compare_function_with_binding_type:*]
  [:bgType="comparison"]

  [:bgType="filtering"]

  [:bgType="non-filtering"]


[cts.https.html?q=webgpu:api,validation,createBindGroup:sampler,device_mismatch:*]
  [:]


[cts.https.html?q=webgpu:api,validation,createBindGroup:storage_texture,mip_level_count:*]
  [:baseMipLevel=1;mipLevelCount=1]

  [:baseMipLevel=1;mipLevelCount=2]

  [:baseMipLevel=2;mipLevelCount=1]

  [:baseMipLevel=2;mipLevelCount=2]


[cts.https.html?q=webgpu:api,validation,createBindGroup:storage_texture,usage:*]
  [:usage0=16;usage1=1]

  [:usage0=16;usage1=16]

  [:usage0=16;usage1=2]

  [:usage0=16;usage1=4]

  [:usage0=16;usage1=8]

  [:usage0=1;usage1=1]

  [:usage0=1;usage1=16]

  [:usage0=1;usage1=2]

  [:usage0=1;usage1=4]

  [:usage0=1;usage1=8]

  [:usage0=2;usage1=1]

  [:usage0=2;usage1=16]

  [:usage0=2;usage1=2]

  [:usage0=2;usage1=4]

  [:usage0=2;usage1=8]

  [:usage0=4;usage1=1]

  [:usage0=4;usage1=16]

  [:usage0=4;usage1=2]

  [:usage0=4;usage1=4]

  [:usage0=4;usage1=8]

  [:usage0=8;usage1=1]

  [:usage0=8;usage1=16]

  [:usage0=8;usage1=2]

  [:usage0=8;usage1=4]

  [:usage0=8;usage1=8]


[cts.https.html?q=webgpu:api,validation,createBindGroup:texture,resource_state:*]
  implementation-status: backlog
  [:]
    expected: FAIL


[cts.https.html?q=webgpu:api,validation,createBindGroup:texture_binding_must_have_correct_usage:*]
  [:]


[cts.https.html?q=webgpu:api,validation,createBindGroup:texture_must_have_correct_component_type:*]
  [:sampleType="float"]

  [:sampleType="sint"]

  [:sampleType="uint"]


[cts.https.html?q=webgpu:api,validation,createBindGroup:texture_must_have_correct_dimension:*]
  [:usage=4;viewDimension="1d"]

  [:usage=4;viewDimension="2d"]

  [:usage=4;viewDimension="2d-array"]

  [:usage=4;viewDimension="3d"]

  [:usage=4;viewDimension="cube"]

  [:usage=4;viewDimension="cube-array"]

  [:usage=8;viewDimension="1d"]

  [:usage=8;viewDimension="2d"]

  [:usage=8;viewDimension="2d-array"]

  [:usage=8;viewDimension="3d"]
